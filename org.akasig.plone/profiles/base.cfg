[buildout]

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads/
    http://dist.plone.org/thirdparty
    http://code.google.com/p/html5lib/downloads/list
    http://dist.repoze.org/
    http://dist.plone.org/release/4.3.2

# If you try to start Zope as root, it will change user id to run as
# the effective user specified here. This user id must own the var directory
# of your buildout.
effective-user = ${buildout:os-user}
# This user will own the rest of the installation, and should be used to
# run buildout.
buildout-user = ${buildout:os-user}
# A flag to tell the Unified Installer whether or not to document sudo use.
need-sudo = no

prefer-final = true
versions = versions
unzip = true
sources = sources
var-dir = ${buildout:directory}/var
backups-dir = ${buildout:var-dir}

[repozo]
# This recipe builds the repozo script for non-zeo installations.
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

[backup]
# This recipe builds the backup, restore and snapshotbackup commands.
# For options see http://pypi.python.org/pypi/collective.recipe.backup
recipe = collective.recipe.backup
location = ${buildout:backups-dir}/backups
blobbackuplocation = ${buildout:backups-dir}/blobstoragebackups
snapshotlocation = ${buildout:backups-dir}/snapshotbackups
blobsnapshotlocation = ${buildout:backups-dir}/blobstoragesnapshots
datafs = ${buildout:var-dir}/filestorage/Data.fs
blob-storage = ${buildout:var-dir}/blobstorage

[zopepy]
# installs a zopepy python interpreter that runs with your
# full Zope environment
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = zopepy
scripts = zopepy

[unifiedinstaller]
# This recipe installs the plonectl script and a few other convenience
# items.
# For options see http://pypi.python.org/pypi/plone.recipe.unifiedinstaller
recipe = plone.recipe.unifiedinstaller
user = ${buildout:admin-user}:${buildout:admin-password}
effective-user = ${buildout:effective-user}
buildout-user = ${buildout:buildout-user}
need-sudo = ${buildout:need-sudo}

[precompiler]
# This recipe is used in production installs to compile
# .py and .po files so that the daemon doesn't try to do it.
# For options see http://pypi.python.org/pypi/plone.recipe.precompiler
recipe = plone.recipe.precompiler
eggs = ${buildout:eggs}
compile-mo-files = true
extra-paths = ${buildout:directory}/products


# The sections below are not included in the unified installer for Plone 4.3.2
# maybe they can (or even should) be removed ?


# create bin/i18ndude command
[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']
eggs =
    ${buildout:eggs}
    ${buildout:test-packages}


# Add diazo compile/run tools to bin; useful for debugging understanding
# diazo. See http://docs.diazo.org/en/latest/compiler.html
[diazotools]
recipe = zc.recipe.egg
eggs = diazo


[zopeskel]
# installs paster and Zopeskel
recipe = zc.recipe.egg
eggs =
    ZopeSkel
    Paste
    PasteDeploy
    PasteScript
    zopeskel.diazotheme
    zopeskel.dexterity
    zest.releaser
    ${buildout:eggs}


# symlinks all Python source code to parts/omelette folder when buildout is run
# windows users will need to install additional software for this part to build 
# correctly.  See http://pypi.python.org/pypi/collective.recipe.omelette for
# relevant details.
[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}
# products = ${buildout:directory}/parts/products
packages = ./
