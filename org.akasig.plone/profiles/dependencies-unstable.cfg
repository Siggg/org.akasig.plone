[buildout]
newest = true

extends =
    versions-caching.cfg
    versions-plone.cfg
    versions.cfg

extensions =
    mr.developer
    buildout.dumppickedversions
    buildout.sanitycheck

dump-picked-versions-file = profiles/versions-picked-while-unstable.cfg

develop =


###
# eea.relations
#
eggs_for_relations =
    eea.relations

zcml_for_relations =
    eea.relations
    eea.relations.default


###
# dexterity relations
#
eggs_for_dexterity_relations =
    plone.app.dexterity [relations]
    plone.app.referenceablebehavior


###
# eea.facetednavigation
#
eggs_for_faceted =
    eea.facetednavigation
    Products.ATVocabularyManager
    eea.faceted.vocabularies
    eea.faceted.inheritance
    eea.faceted.blue
    eea.cache

zcml_for_faceted =
    eea.faceted.vocabularies
    eea.faceted.blue
    eea.cache-overrides

#    eea.facetednavigation-meta
#    eea.facetednavigation-overrides
#    eea.facetednavigation


###
# Content tagging
#
eggs_for_tagging =
    eea.tags
    Products.PloneKeywordManager

# * collective.taxonomy has bugs
#


###
# Web 2.0-ish
#
eggs_for_web20 =
    collective.favoriting
    collective.favorites
    ftw.dashboard.portlets.favourites
    plone.contentratings
    collective.fbshare
    collective.simplesocial
    collective.sharerizer

# *   redomino.social # extends sc.social.like
# but does not display
#
# *  sc.social.bookmarks does not display properly
#
# *   cioppino.twothumbs does not display its viewlet
#
# *   collective.portlet.socialnetworks I don't know how to configure it


###
# Visual enhancements
#
eggs_for_visual =
    collective.contentleadimage
    collective.portlet.workflowsteps
    collective.portlet.toc
    collective.portlet.itemview
    collective.portlet.content
    collective.portlet.contribute

# * to be tested :
#
#    collective.portlet.ngcollection
#    collective.portlet.banners
#    collective.carousel
#
# *   collective.carouselbehaviour won't let zope start without an
#    "ImportError: No module named directives" error message.
#
# *     eea.progressbar looks ugly and has bugs
#
# *     collective.prettydate does not show up among installable modules
#
# *     collective.footerportletmanager does not display its footer portlet
#
# *     plonetheme.diazo_responsivetheme breaks the visual editor
#


###
# Page composition
#
eggs_for_composition =
    collective.cover
    Products.Collage
    collective.collage.ploneformgen
    collective.collage.portlets
    collective.collage.nested
    collective.collage.contentleadimage
    collective.collage.innerfade

# *    redomino.contentwellportlets won't appear among installable modules


###
# Portlets for related or similar content
#
eggs_for_similarity =
    collective.portlet.similarcontent
    collective.portlet.relateditems

# *    collective.portlet.keywordmatches does not seem to install


###
# Additional content items
#
eggs_for_more_types =
    Products.feedfeeder
    Products.Ploneboard
    Products.PloneboardSubscription
    Products.PloneboardNotify
    Products.PloneboardComments
    Products.PloneboardPortlet
    Products.Poi
    Products.Faq
    Products.FAQulator
    Products.EasyNewsletter
    collective.polls


###
# Membership-related
#
eggs_for_membership =
    plone.app.changeownership
    dexterity.membrane
    collective.takeaportrait
    collective.onlogin
    collective.memberemails
    collective.memberapproval
    iw.memberreplace

#    Products.PloneInvite

zcml_for_membership =
    plone.app.changeownership
    iw.memberreplace
    
    
###
# Additional dexterity behaviors
#
## Not visible as a module nor as an additional behavior once installed with eggs
# (I can't understand how to activate them TTW)
#
eggs_for_behaviors =
    wildcard.media
    collective.behavior.contactinfo
    collective.behavior.discount
    collective.behavior.localanalytics
    collective.behavior.localdiazo
    collective.behavior.localregistry
    collective.behavior.localskin
    collective.behavior.price
    collective.behavior.salable
    collective.behavior.size
    collective.behavior.sku
    collective.behavior.stock
    collective.behavior.vat
    collective.carouselbehaviour
    collective.miscbehaviors
    plone.app.versioningbehavior
    plone.app.stagingbehavior
    collective.dexteritydiff

# *     collective.filepreviewbehavior won't install :
# error: docs/HISTORY.txt: No such file or directory
#

###
# Deployment of content to static files
#
eggs_for_export =
    enpraxis.staticsite
    cssselect
    stxnext.staticdeployment

# * stxnext.staticdeployment v.1.1 won't install under Plone 4.3.2
# (cannot import name IResource)
#  cssselect # required by stxnet.staticdeployment
#
# * enpraxis.staticsite does not seem to install either
#

zcml_for_export =
    enpraxis.staticsite
    stxnext.staticdeployment
    

###
# Nice-to-haves
#
eggs_for_gadgets =
    plone.formwidget.recaptcha
    collective.periodcriterion
    collective.googleanalytics
    collective.teaser
    collective.pfg.dexterity
    collective.ots
    ots
    collective.lineage
    collective.portlets.lineage
    collective.confirmableforms
    collective.rdfadcviewlet
    collective.imstransport
    plone.app.workflowmanager
    
zcml_for_gadgets =
    plone.formwidget.recaptcha

# *   ots required by collective.ots and requires libots-dev under Ubuntu 12.04
#
# *   plone.formwidget.recaptcha  # install when Plone instance gets created
#
# * collective.pfg.dexterity requires that the "Dexterity Content Adapter" is
# added to the allowed types under form folders. And the base_view may have to
# be added to the adapter views. Then add an adapter to the form folder.
#
# * collective.rdfadcviewlet does not seem to work with Plone 4.3.2
#
# * aws.authrss won't install, even with plone.app.kss (required)
# "AttributeError: 'AuthRSSLinkViewlet' object has no attribute 'allowed'"
#
# * could not install collective.imstransport using zcml slug
# (even with Form.formlib)
#
    
# Add additional eggs here
# elementtree is required by Plone
eggs =
    Plone
    Pillow
    Products.DocFinderTab
    plone.reload # allows online refreshing of code at http://localhost:8080/@@reload
    plone.app.caching
    Products.Clouseau
    Products.PDBDebugMode
    collective.quickupload
    Products.PloneFormGen
    ${:eggs_for_faceted}
    ${:eggs_for_dexterity_relations}
    ${:eggs_for_tagging}
    ${:eggs_for_web20}
    ${:eggs_for_visual}
    ${:eggs_for_composition}
    ${:eggs_for_similarity}
    ${:eggs_for_more_types}
    ${:eggs_for_membership}
    ${:eggs_for_behaviors}
    ${:eggs_for_export}
    ${:eggs_for_gadgets}
    ${:eggs_for_relations}


# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    ${:zcml_for_faceted}

#    ${:zcml_for_membership}
#    ${:zcml_for_export}
#    ${:zcml_for_gadgets}
#    ${:zcml_for_relations}


####
# mr.developer directive
always-checkout = force
sources = sources
auto-checkout = *

############################################
# Test Packages
# ----------
# Specify a list of packages that you wish to explicity include in your test suite.
# Base eggs are automatically included
#
test-packages =
#    plonetheme.sunburst

# Put your mr.developer managed source code repositories here, see
# http://pypi.python.org/pypi/mr.developer for details on format for this part
[sources]
collective.developermanual = git git://github.com/collective/collective.developermanual.git

[graphviz]
recipe = zc.recipe.cmmi
url = http://www.graphviz.org/pub/graphviz/stable/SOURCES/graphviz-2.34.0.tar.gz
# requires libperl-dev (OS package)

[libevent]
recipe = zc.recipe.cmmi
url = https://github.com/downloads/libevent/libevent/libevent-1.4.14b-stable.tar.gz

[memcached]
recipe = zc.recipe.cmmi
url = http://www.memcached.org/files/memcached-1.4.17.tar.gz
extra_options = --with-libevent=${libevent:location}

[memcached-ctl]
recipe = lovely.recipe:mkfile
path = ${buildout:bin-directory}/memcached
mode = 0755
content =
 #!/bin/sh
 export LD_LIBRARY_PATH=${libevent:location}/lib

 PIDFILE=${memcached:location}/memcached.pid
    case "$1" in
      start)
       ${memcached:location}/bin/memcached -d -u ${buildout:effective-user} -P $PIDFILE
        ;;
      stop)
        kill `cat $PIDFILE`
        ;;
      restart|force-reload)
        $0 stop
        sleep 1
        $0 start
        ;;
      *)
        echo "Usage: $SCRIPTNAME {start|stop|restart}" >&2
        exit 1
        ;;
    esac